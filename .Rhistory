library(pROC)
knitr::opts_chunk$set(echo = TRUE)
predicted_probs <- predict(log_model_interaction3, type = "response")
roc_obj <- roc(response = student_depression_dataset$Depression,
predictor = predicted_probs)
library(ezids)
library(ggplot2)
library(dplyr)
library(readr)
library(tidyr)
library(gridExtra)
library(stringr)
library(corrplot)
library(randomForest)
library(rpart)
library(caret)
library(class)
library(pROC)
predicted_probs <- predict(log_model_interaction3, type = "response")
roc_obj <- roc(response = student_depression_dataset$Depression,
predictor = predicted_probs)
predicted_probs <- predict(log_model_interaction3, type = "response")
response <- student_depression_dataset$Depression[!is.na(predicted_probs)]
roc_obj <- roc(response = response, predictor = na.omit(predicted_probs))
car::vif(log_model)
#VIFs show no multicollinearity issues, VIF values are well below the common threshold of 5.
cat("Logistic Regression model AIC - ", AIC(log_model))
log_model_interaction <- glm(
Depression ~ . + Academic.Pressure:Financial.Stress,
data = student_depression_dataset,
family = "binomial"
)
summary(log_model_interaction)
cat("AIC of Logistic Regression model with interaction Academic.Pressure * Financial.Stress  - ", AIC(log_model_interaction))
log_model_interaction2 <- glm(
Depression ~ . + Sleep.Hours:Study.Hours,
data = student_depression_dataset,
family = "binomial"
)
summary(log_model_interaction2)
cat("AIC of Logistic Regression model with interaction Sleep.Hours × Study.Hours  - ", AIC(log_model_interaction2))
log_model_interaction3 <- glm(
Depression ~ . + Diet.Score:Financial.Stress,
data = train,
family = "binomial"
)
summary(log_model_interaction3)
cat("AIC of Logistic Regression model with interaction Diet.Score × Financial.Stress - ", AIC(log_model_interaction3))
log_model_interaction4 <- glm(
Depression ~ . + Family.History.of.Mental.Illness:Have.you.ever.had.suicidal.thoughts..,
data = student_depression_dataset,
family = "binomial"
)
summary(log_model_interaction4)
cat("AIC of Logistic Regression model with interaction Family.History × Suicidal.Thoughts - ", AIC(log_model_interaction4))
combined_model <- glm(
Depression ~ . + Diet.Score:Financial.Stress + Family.History.of.Mental.Illness:Have.you.ever.had.suicidal.thoughts..,
data = student_depression_dataset,
family = "binomial"
)
summary(combined_model)
cat("AIC of Logistic Regression model with combined interactions Diet.Score * Financial.Stress AIC & Family.History.of.Mental.Illness * Have.you.ever.had.suicidal.thoughts - ", AIC(combined_model))
combined_model2 <- glm(
Depression ~ . + Academic.Pressure:Financial.Stress + Family.History.of.Mental.Illness:Have.you.ever.had.suicidal.thoughts..,
data = student_depression_dataset,
family = "binomial"
)
summary(combined_model2)
cat("AIC of Logistic Regression model with combined interactions Academic.Pressure*Financial.Stress + Family.History.of.Mental.Illness*Have.you.ever.had.suicidal.thoughts - ", AIC(combined_model2) )
combined_model3 <- glm(
Depression ~ . + Academic.Pressure:Financial.Stress + Diet.Score:Financial.Stress,
data = student_depression_dataset,
family = "binomial"
)
summary(combined_model3)
cat("AIC of Logistic Regression model with combined interactions Academic.Pressure*Financial.Stress + Diet.Score*Financial.Stress - ", AIC(combined_model3) )
dt_predictions <- predict(log_model_interaction3, newdata = test, type = "class")
dt_predictions <- predict(log_model_interaction3, newdata = test, type = "reponse")
logit_probs <- predict(log_model_interaction3, newdata = test, type = "response")
logit_predictions <- ifelse(logit_probs > 0.5, 1, 0)
logit_conf_matrix <- confusionMatrix(as.factor(logit_predictions), test$Depression)
print(logit_conf_matrix)
print(dt_conf_matrix)
cat(" Accuracy:", dt_conf_matrix$overall['Accuracy'], "\n")
logit_probs <- predict(log_model_interaction3, newdata = test, type = "response")
logit_predictions <- ifelse(logit_probs > 0.5, 1, 0)
logit_conf_matrix <- confusionMatrix(as.factor(logit_predictions), test$Depression)
print(logit_conf_matrix)
cat(" Accuracy:", logit_conf_matrix$overall['Accuracy'], "\n")
model_data <- model.frame(log_model_interaction3)
response <- model_data$Depression
predicted_probs <- predict(log_model_interaction3, type = "response")
roc_obj <- roc(response = response,
predictor = predicted_probs)
plot(roc_obj, main = "ROC Curve for Diet × Financial Stress Model")
auc(roc_obj)
model_data <- model.frame(log_model_interaction3)
response <- model_data$Depression
predicted_probs <- predict(log_model_interaction3, type = "response")
roc_obj <- roc(response = response,
predictor = predicted_probs)
plot(roc_obj, main = "ROC Curve for Diet × Financial Stress Model")
auc(roc_obj)
logit_model
model_data <- model.frame(logit_model)
response <- model_data$Depression
predicted_probs <- predict(logit_model, type = "response")
roc_obj <- roc(response = response,
predictor = predicted_probs)
plot(roc_obj, main = "ROC Curve for Diet × Financial Stress Model")
auc(roc_obj)
model_data <- model.frame(log_model_interaction3)
response <- model_data$Depression
predicted_probs <- predict(log_model_interaction3, type = "response")
roc_obj <- roc(response = response,
predictor = predicted_probs)
plot(roc_obj, main = "ROC Curve for Diet × Financial Stress Model")
auc(roc_obj)
logit_model
model_data2 <- model.frame(logit_model)
response2 <- model_data$Depression
predicted_probs2 <- predict(logit_model, type = "response")
roc_obj2 <- roc(response = response2,
predictor = predicted_probs2)
plot(roc_obj2, main = "ROC Curve for Logit model")
auc(roc_obj2)
model_data <- model.frame(log_model_interaction3)
response <- model_data$Depression
predicted_probs <- predict(log_model_interaction3, type = "response")
roc_obj <- roc(response = response,
predictor = predicted_probs)
plot(roc_obj, main = "ROC Curve for Diet × Financial Stress Model")
auc(roc_obj)
model_data2 <- model.frame(logit_model)
response2 <- model_data$Depression
predicted_probs2 <- predict(logit_model, type = "response")
roc_obj2 <- roc(response = response2,
predictor = predicted_probs2)
plot(roc_obj2, main = "ROC Curve for Logit model")
auc(roc_obj2)
model_data_interaction <- model.frame(log_model_interaction3)
response_interaction <- model_data_interaction$Depression
predicted_interaction <- predict(log_model_interaction3, newdata = model_data_interaction, type = "response")
roc_interaction <- roc(response_interaction, predicted_interaction)
model_data_base <- model.frame(logit_model)
response_base <- model_data_base$Depression
predicted_base <- predict(logit_model, newdata = model_data_base, type = "response")
roc_base <- roc(response_base, predicted_base)
plot(roc_base, col = "blue", main = "ROC Curve Comparison")
lines(roc_interaction, col = "red")
legend("bottomright",
legend = c(paste("Base Model (AUC =", round(auc(roc_base), 3)),
paste("Interaction Model (AUC =", round(auc(roc_interaction), 3))),
col = c("blue", "red"), lwd = 2)
model_data_interaction <- model.frame(log_model_interaction3)
response_interaction <- model_data_interaction$Depression
predicted_interaction <- predict(log_model_interaction3, newdata = model_data_interaction, type = "response")
roc_interaction <- roc(response_interaction, predicted_interaction)
model_data_base <- model.frame(logit_model)
response_base <- model_data_base$Depression
predicted_base <- predict(logit_model, newdata = model_data_base, type = "response")
roc_base <- roc(response_base, predicted_base)
plot(roc_base, main = "ROC Curve for Logit model")
plot(roc_interaction, main = "ROC Curve for Interaction Logit model")
full_data <- na.omit(student_depression_dataset[c("Depression", all.vars(formula(logit_model))])
full_data <- na.omit(student_depression_dataset[c("Depression", all.vars(formula(logit_model))])]
library(pROC)
# 1. Prepare data - ensure identical treatment
full_data <- na.omit(student_depression_dataset[c("Depression", all.vars(formula(logit_model))])
library(pROC)
# 1. Prepare data - ensure identical treatment
full_data <- na.omit(student_depression_dataset[c("Depression", all.vars(formula(logit_model))])
library(pROC)
# 1. Prepare data - ensure identical treatment
full_data <- na.omit(student_depression_dataset[c("Depression", all.vars(formula(logit_model)))])
# 2. Generate predictions from BOTH models on THE SAME data
base_pred <- predict(logit_model, newdata = full_data, type = "response")
interaction_pred <- predict(log_model_interaction3, newdata = full_data, type = "response")
# 3. Create ROC curves
roc_base <- roc(full_data$Depression, base_pred)
roc_inter <- roc(full_data$Depression, interaction_pred)
# 4. Plot comparison
plot(roc_base, col = "blue", main = "Model Comparison")
lines(roc_inter, col = "red", lty = 2)
legend("bottomright",
legend = c(paste("Base (AUC =", round(auc(roc_base), 4)),
paste("Interaction (AUC =", round(auc(roc_inter), 4))),
col = c("blue", "red"), lwd = 2)
# 5. Statistical comparison
roc_test <- roc.test(roc_base, roc_inter)
print(paste("p-value for AUC difference:", roc_test$p.value))
library(pROC)
# 1. Prepare data - ensure identical treatment
full_data <- na.omit(student_depression_dataset[c("Depression", all.vars(formula(logit_model)))])
# 2. Generate predictions from BOTH models on THE SAME data
base_pred <- predict(logit_model, newdata = full_data, type = "response")
interaction_pred <- predict(log_model_interaction3, newdata = full_data, type = "response")
# 3. Create ROC curves
roc_base <- roc(full_data$Depression, base_pred)
roc_inter <- roc(full_data$Depression, interaction_pred)
# 4. Plot comparison
plot(roc_base, col = "blue", main = "Model Comparison")
lines(roc_inter, col = "red", lty = 2)
legend("bottomright",
legend = c(paste("Base (AUC =", round(auc(roc_base), 4)),
paste("Interaction (AUC =", round(auc(roc_inter), 4))),
col = c("blue", "red"), lwd = 2)
# 5. Statistical comparison
roc_test <- roc.test(roc_base, roc_inter)
print(paste("p-value for AUC difference:", roc_test$p.value))
library(pROC)
# 1. Prepare data - ensure identical treatment
full_data <- na.omit(student_depression_dataset[c("Depression", all.vars(formula(logit_model)))])
# 2. Generate predictions from BOTH models on THE SAME data
base_pred <- predict(logit_model, newdata = test, type = "response")
interaction_pred <- predict(log_model_interaction3, newdata = test, type = "response")
# 3. Create ROC curves
roc_base <- roc(full_data$Depression, base_pred)
library(pROC)
# 1. Prepare data - ensure identical treatment
full_data <- na.omit(test[c("Depression", all.vars(formula(logit_model)))])
# 2. Generate predictions from BOTH models on THE SAME data
base_pred <- predict(logit_model, newdata = full_data, type = "response")
interaction_pred <- predict(log_model_interaction3, newdata = full_data, type = "response")
# 3. Create ROC curves
roc_base <- roc(full_data$Depression, base_pred)
roc_inter <- roc(full_data$Depression, interaction_pred)
# 4. Plot comparison
plot(roc_base, col = "blue", main = "Model Comparison")
lines(roc_inter, col = "red", lty = 2)
legend("bottomright",
legend = c(paste("Base (AUC =", round(auc(roc_base), 4)),
paste("Interaction (AUC =", round(auc(roc_inter), 4))),
col = c("blue", "red"), lwd = 2)
# 5. Statistical comparison
roc_test <- roc.test(roc_base, roc_inter)
print(paste("p-value for AUC difference:", roc_test$p.value))
library(pROC)
# 1. Prepare data - ensure identical treatment
full_data <- na.omit(test[c("Depression", all.vars(formula(logit_model)))])
# 2. Generate predictions from BOTH models on THE SAME data
base_pred <- predict(logit_model, newdata = test, type = "response")
interaction_pred <- predict(log_model_interaction3, newdata = full_data, type = "response")
# 3. Create ROC curves
roc_base <- roc(full_data$Depression, base_pred)
roc_inter <- roc(full_data$Depression, interaction_pred)
# 4. Plot comparison
plot(roc_base, col = "blue", main = "Model Comparison")
lines(roc_inter, col = "red", lty = 2)
legend("bottomright",
legend = c(paste("Base (AUC =", round(auc(roc_base), 4)),
paste("Interaction (AUC =", round(auc(roc_inter), 4))),
col = c("blue", "red"), lwd = 2)
# 5. Statistical comparison
roc_test <- roc.test(roc_base, roc_inter)
print(paste("p-value for AUC difference:", roc_test$p.value))
library(pROC)
# 1. Prepare data - ensure identical treatment
full_data <- na.omit(test[c("Depression", all.vars(formula(logit_model)))])
# 2. Generate predictions from BOTH models on THE SAME data
base_pred <- predict(logit_model, newdata = test, type = "response")
interaction_pred <- predict(log_model_interaction3, newdata = test, type = "response")
# 3. Create ROC curves
roc_base <- roc(full_data$Depression, base_pred)
roc_inter <- roc(full_data$Depression, interaction_pred)
# 4. Plot comparison
plot(roc_base, col = "blue", main = "Model Comparison")
lines(roc_inter, col = "red", lty = 2)
legend("bottomright",
legend = c(paste("Base (AUC =", round(auc(roc_base), 4)),
paste("Interaction (AUC =", round(auc(roc_inter), 4))),
col = c("blue", "red"), lwd = 2)
# 5. Statistical comparison
roc_test <- roc.test(roc_base, roc_inter)
print(paste("p-value for AUC difference:", roc_test$p.value))
set.seed(123)
split_index <- createDataPartition(student_depression_dataset$Depression, p = 0.7, list = FALSE)
train <- student_depression_dataset[split_index, ]
test  <- student_depression_dataset[-split_index, ]
logit_model <- glm(Depression ~ ., data = train, family = "binomial")
logit_probs <- predict(logit_model, newdata = test, type = "response")
logit_predictions <- ifelse(logit_probs > 0.5, 1, 0)
logit_conf_matrix <- confusionMatrix(as.factor(logit_predictions), test$Depression)
print(logit_conf_matrix)
cat("Logistic Regression Accuracy:", logit_conf_matrix$overall['Accuracy'], "\n")
car::vif(log_model)
#VIFs show no multicollinearity issues, VIF values are well below the common threshold of 5.
cat("Logistic Regression model AIC - ", AIC(log_model))
log_model_interaction <- glm(
Depression ~ . + Academic.Pressure:Financial.Stress,
data = student_depression_dataset,
family = "binomial"
)
summary(log_model_interaction)
cat("AIC of Logistic Regression model with interaction Academic.Pressure * Financial.Stress  - ", AIC(log_model_interaction))
log_model_interaction2 <- glm(
Depression ~ . + Sleep.Hours:Study.Hours,
data = student_depression_dataset,
family = "binomial"
)
summary(log_model_interaction2)
cat("AIC of Logistic Regression model with interaction Sleep.Hours × Study.Hours  - ", AIC(log_model_interaction2))
log_model_interaction3 <- glm(
Depression ~ . + Diet.Score:Financial.Stress,
data = train,
family = "binomial"
)
summary(log_model_interaction3)
cat("AIC of Logistic Regression model with interaction Diet.Score × Financial.Stress - ", AIC(log_model_interaction3))
log_model_interaction4 <- glm(
Depression ~ . + Family.History.of.Mental.Illness:Have.you.ever.had.suicidal.thoughts..,
data = student_depression_dataset,
family = "binomial"
)
summary(log_model_interaction4)
cat("AIC of Logistic Regression model with interaction Family.History × Suicidal.Thoughts - ", AIC(log_model_interaction4))
combined_model <- glm(
Depression ~ . + Diet.Score:Financial.Stress + Family.History.of.Mental.Illness:Have.you.ever.had.suicidal.thoughts..,
data = student_depression_dataset,
family = "binomial"
)
summary(combined_model)
cat("AIC of Logistic Regression model with combined interactions Diet.Score * Financial.Stress AIC & Family.History.of.Mental.Illness * Have.you.ever.had.suicidal.thoughts - ", AIC(combined_model))
combined_model2 <- glm(
Depression ~ . + Academic.Pressure:Financial.Stress + Family.History.of.Mental.Illness:Have.you.ever.had.suicidal.thoughts..,
data = student_depression_dataset,
family = "binomial"
)
summary(combined_model2)
cat("AIC of Logistic Regression model with combined interactions Academic.Pressure*Financial.Stress + Family.History.of.Mental.Illness*Have.you.ever.had.suicidal.thoughts - ", AIC(combined_model2) )
combined_model3 <- glm(
Depression ~ . + Academic.Pressure:Financial.Stress + Diet.Score:Financial.Stress,
data = student_depression_dataset,
family = "binomial"
)
summary(combined_model3)
cat("AIC of Logistic Regression model with combined interactions Academic.Pressure*Financial.Stress + Diet.Score*Financial.Stress - ", AIC(combined_model3) )
library(pROC)
# 1. Prepare data - ensure identical treatment
full_data <- na.omit(test[c("Depression", all.vars(formula(logit_model)))])
# 2. Generate predictions from BOTH models on THE SAME data
base_pred <- predict(logit_model, newdata = test, type = "response")
interaction_pred <- predict(log_model_interaction3, newdata = test, type = "response")
# 3. Create ROC curves
roc_base <- roc(full_data$Depression, base_pred)
roc_inter <- roc(full_data$Depression, interaction_pred)
# 4. Plot comparison
plot(roc_base, col = "blue", main = "Model Comparison")
lines(roc_inter, col = "red", lty = 2)
legend("bottomright",
legend = c(paste("Base (AUC =", round(auc(roc_base), 4)),
paste("Interaction (AUC =", round(auc(roc_inter), 4))),
col = c("blue", "red"), lwd = 2)
# 5. Statistical comparison
roc_test <- roc.test(roc_base, roc_inter)
print(paste("p-value for AUC difference:", roc_test$p.value))
car::vif(log_model)
#VIFs show no multicollinearity issues, VIF values are well below the common threshold of 5.
cat("Logistic Regression model AIC - ", AIC(log_model))
log_model_interaction <- glm(
Depression ~ . + Academic.Pressure:Financial.Stress,
data = student_depression_dataset,
family = "binomial"
)
summary(log_model_interaction)
cat("AIC of Logistic Regression model with interaction Academic.Pressure * Financial.Stress  - ", AIC(log_model_interaction))
log_model_interaction2 <- glm(
Depression ~ . + Sleep.Hours:Study.Hours,
data = student_depression_dataset,
family = "binomial"
)
summary(log_model_interaction2)
cat("AIC of Logistic Regression model with interaction Sleep.Hours × Study.Hours  - ", AIC(log_model_interaction2))
log_model_interaction3 <- glm(
Depression ~ . + Diet.Score:Financial.Stress,
data = train,
family = "binomial"
)
summary(log_model_interaction3)
cat("AIC of Logistic Regression model with interaction Diet.Score × Financial.Stress - ", AIC(log_model_interaction3))
log_model_interaction4 <- glm(
Depression ~ . + Family.History.of.Mental.Illness:Have.you.ever.had.suicidal.thoughts..,
data = student_depression_dataset,
family = "binomial"
)
summary(log_model_interaction4)
cat("AIC of Logistic Regression model with interaction Family.History × Suicidal.Thoughts - ", AIC(log_model_interaction4))
combined_model <- glm(
Depression ~ . + Diet.Score:Financial.Stress + Family.History.of.Mental.Illness:Have.you.ever.had.suicidal.thoughts..,
data = student_depression_dataset,
family = "binomial"
)
summary(combined_model)
cat("AIC of Logistic Regression model with combined interactions Diet.Score * Financial.Stress AIC & Family.History.of.Mental.Illness * Have.you.ever.had.suicidal.thoughts - ", AIC(combined_model))
combined_model2 <- glm(
Depression ~ . + Academic.Pressure:Financial.Stress + Family.History.of.Mental.Illness:Have.you.ever.had.suicidal.thoughts..,
data = student_depression_dataset,
family = "binomial"
)
summary(combined_model2)
cat("AIC of Logistic Regression model with combined interactions Academic.Pressure*Financial.Stress + Family.History.of.Mental.Illness*Have.you.ever.had.suicidal.thoughts - ", AIC(combined_model2) )
combined_model3 <- glm(
Depression ~ . + Academic.Pressure:Financial.Stress + Diet.Score:Financial.Stress,
data = student_depression_dataset,
family = "binomial"
)
summary(combined_model3)
cat("AIC of Logistic Regression model with combined interactions Academic.Pressure*Financial.Stress + Diet.Score*Financial.Stress - ", AIC(combined_model3) )
car::vif(log_model)
#VIFs show no multicollinearity issues, VIF values are well below the common threshold of 5.
cat("Logistic Regression model AIC - ", AIC(log_model))
log_model_interaction <- glm(
Depression ~ . + Academic.Pressure:Financial.Stress,
data = student_depression_dataset,
family = "binomial"
)
summary(log_model_interaction)
cat("AIC of Logistic Regression model with interaction Academic.Pressure * Financial.Stress  - ", AIC(log_model_interaction))
log_model_interaction2 <- glm(
Depression ~ . + Sleep.Hours:Study.Hours,
data = student_depression_dataset,
family = "binomial"
)
summary(log_model_interaction2)
cat("AIC of Logistic Regression model with interaction Sleep.Hours × Study.Hours  - ", AIC(log_model_interaction2))
log_model_interaction3 <- glm(
Depression ~ . + Diet.Score:Financial.Stress,
data = student_depression_dataset,
family = "binomial"
)
summary(log_model_interaction3)
cat("AIC of Logistic Regression model with interaction Diet.Score × Financial.Stress - ", AIC(log_model_interaction3))
log_model_interaction4 <- glm(
Depression ~ . + Family.History.of.Mental.Illness:Have.you.ever.had.suicidal.thoughts..,
data = student_depression_dataset,
family = "binomial"
)
summary(log_model_interaction4)
cat("AIC of Logistic Regression model with interaction Family.History × Suicidal.Thoughts - ", AIC(log_model_interaction4))
combined_model <- glm(
Depression ~ . + Diet.Score:Financial.Stress + Family.History.of.Mental.Illness:Have.you.ever.had.suicidal.thoughts..,
data = student_depression_dataset,
family = "binomial"
)
summary(combined_model)
cat("AIC of Logistic Regression model with combined interactions Diet.Score * Financial.Stress AIC & Family.History.of.Mental.Illness * Have.you.ever.had.suicidal.thoughts - ", AIC(combined_model))
combined_model2 <- glm(
Depression ~ . + Academic.Pressure:Financial.Stress + Family.History.of.Mental.Illness:Have.you.ever.had.suicidal.thoughts..,
data = student_depression_dataset,
family = "binomial"
)
summary(combined_model2)
cat("AIC of Logistic Regression model with combined interactions Academic.Pressure*Financial.Stress + Family.History.of.Mental.Illness*Have.you.ever.had.suicidal.thoughts - ", AIC(combined_model2) )
combined_model3 <- glm(
Depression ~ . + Academic.Pressure:Financial.Stress + Diet.Score:Financial.Stress,
data = student_depression_dataset,
family = "binomial"
)
summary(combined_model3)
cat("AIC of Logistic Regression model with combined interactions Academic.Pressure*Financial.Stress + Diet.Score*Financial.Stress - ", AIC(combined_model3) )
car::vif(log_model)
#VIFs show no multicollinearity issues, VIF values are well below the common threshold of 5.
cat("Logistic Regression model AIC - ", AIC(log_model))
log_model_interaction <- glm(
Depression ~ . + Academic.Pressure:Financial.Stress,
data = student_depression_dataset,
family = "binomial"
)
summary(log_model_interaction)
cat("AIC of Logistic Regression model with interaction Academic.Pressure * Financial.Stress  - ", AIC(log_model_interaction))
log_model_interaction2 <- glm(
Depression ~ . + Sleep.Hours:Study.Hours,
data = student_depression_dataset,
family = "binomial"
)
summary(log_model_interaction2)
cat("AIC of Logistic Regression model with interaction Sleep.Hours × Study.Hours  - ", AIC(log_model_interaction2))
log_model_interaction3 <- glm(
Depression ~ . + Diet.Score:Financial.Stress,
data = student_depression_dataset,
family = "binomial"
)
summary(log_model_interaction3)
cat("AIC of Logistic Regression model with interaction Diet.Score × Financial.Stress - ", AIC(log_model_interaction3))
log_model_interaction4 <- glm(
Depression ~ . + Family.History.of.Mental.Illness:Have.you.ever.had.suicidal.thoughts..,
data = student_depression_dataset,
family = "binomial"
)
summary(log_model_interaction4)
cat("AIC of Logistic Regression model with interaction Family.History × Suicidal.Thoughts - ", AIC(log_model_interaction4))
combined_model <- glm(
Depression ~ . + Diet.Score:Financial.Stress + Family.History.of.Mental.Illness:Have.you.ever.had.suicidal.thoughts..,
data = student_depression_dataset,
family = "binomial"
)
summary(combined_model)
cat("AIC of Logistic Regression model with combined interactions Diet.Score * Financial.Stress AIC & Family.History.of.Mental.Illness * Have.you.ever.had.suicidal.thoughts - ", AIC(combined_model))
combined_model2 <- glm(
Depression ~ . + Academic.Pressure:Financial.Stress + Family.History.of.Mental.Illness:Have.you.ever.had.suicidal.thoughts..,
data = student_depression_dataset,
family = "binomial"
)
summary(combined_model2)
cat("AIC of Logistic Regression model with combined interactions Academic.Pressure*Financial.Stress + Family.History.of.Mental.Illness*Have.you.ever.had.suicidal.thoughts - ", AIC(combined_model2) )
combined_model3 <- glm(
Depression ~ . + Academic.Pressure:Financial.Stress + Diet.Score:Financial.Stress,
data = student_depression_dataset,
family = "binomial"
)
summary(combined_model3)
cat("AIC of Logistic Regression model with combined interactions Academic.Pressure*Financial.Stress + Diet.Score*Financial.Stress - ", AIC(combined_model3) )
